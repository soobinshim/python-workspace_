1. 
#공백을 제외한 나머지 문자들의 갯수를 구하시오.
st = "it is a fun python class"

2. 
각 자리가 숫자(0부터 9)로만 이러어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 'x' 혹은 '+' 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하시오.
모든 연산은 왼쪽에서부터 순서대로 진행된다고 가정합니다.
ex) "02489"라는 문자열로 만들 수 있는 가장 큰 수는 0+2 -> 2x4 ->8x8 ->64x9 =>576
ex) "567" 문자열로 만들 수 있는 가장 큰 수 = 210
ex) 입력은 문자열로 입력받아주세요( S=input("입력: ") (ex)02489 , 12345)

3. 
숫자 5개를 입력 받아 합계 / 평균을 각각 구하세요 

4.
# 총 30개의 좌석에 예약인원에 맞는 좌석을 지정해주는 프로그램입니다.
# 일행 수(people)를 입력받고, 일행 수가 남은 좌석 수 이하인 경우 지정좌석(reserved)을 알려줍니다.
# 좌석은 1번부터 순차적으로 지정합니다.
# 좌석을 알려준 후 남은 좌석 갯수를 알려주고 예약을 계속합니다.
# 남은 좌석이 없는 경우 프로그램을 종료합니다.
'''출력 예시
==========좌석 예약 프로그램==========
일행 수 입력 : 5
+ --------------------- +
| 1부터 5번 좌석입니다. |
+ --------------------- +
예약 가능 25자리 남았습니다.

==========좌석 예약 프로그램==========
일행 수 입력 : 6
+ --------------------- +
| 6부터 11번 좌석입니다. |
+ --------------------- +
예약 가능 19자리 남았습니다.

==========좌석 예약 프로그램==========
일행 수 입력 : 19
+ --------------------- +
| 12부터 30번 좌석입니다. |
+ --------------------- +
예약 가능 0자리 남았습니다.

모든 좌석이 예약되었습니다. 예약을 종료합니다.
'''






[풀이]
1. 
st = "it is a fun python class"
cnt = 0
for i in st:
    if i != ' ':
        cnt = cnt + 1
print(cnt)


2.
s=input("연결된 숫자 문자열 입력: ")
result = 0 # 문자열로 만들 수 있는 가장 큰 수

for i in s:
    i=int(i)
    if i <= 1 or result <=1:
        result+=i
    else:
        result*=i
print(result)


3. 
sum=0

x = 5 # 입력 숫자 개수

for i in range(x) :

    n = int(input("n:"))

    sum = sum + n

print("합계: ", sum)

print("평균: ", sum/x)


4.
people=0; reserved=0; seat=30; possible=30
while True:
    print('\n{:=^30}'.format('좌석 예약 프로그램'))
    people = int(input('일행 수 입력 : '))

    if people <= possible:
        print('+','-'*21,'+')
        print(f'| {reserved+1}부터 {reserved+people}번 좌석입니다. |')
        print('+','-'*21,'+')
        reserved += people
        possible=seat-reserved
    elif people > possible:
        print(f'{people}명은 예약이 불가합니다.')
    
    print(f'예약 가능 {possible}자리 남았습니다.')

    if possible == 0:
        print('\n모든 좌석이 예약되었습니다. 예약을 종료합니다.')
        break
    else:
        continue